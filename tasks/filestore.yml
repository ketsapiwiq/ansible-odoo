- name: "Create user rsync on {{ ansible_host }}"
  user:
    name: rsync
    create_home: true
    system: yes
    generate_ssh_key: yes
    ssh_key_type: ed25519
  register: rsync_user

# - name: "Create rsync user in {{ odoo_extra_addons_source_host }}"
#   user:
#       name: rsync
#   delegate_to: "{{ odoo_extra_addons_source_host }}"

- name: Authorize key from current Odoo instance {{ ansible_host }} to {{ odoo_filestore_src_host }}"
  authorized_key:
    user: root
    # user: rsync
    key: "{{ rsync_user.ssh_public_key }}"
  delegate_to: "{{ odoo_filestore_src_host }}"

- name: "Ensure {{ odoo_filestore_dest_path }} and {{ odoo_filestore_dest_path }}/{{ odoo_db_name }} exist"
  file:
    state: directory
    path: "{{ item }}"
    owner: odoo
    group: odoo
  loop:
    - odoo_filestore_dest_path
    - "{{ odoo_filestore_dest_path }}/{{ odoo_db_name }}"
  notify: Restart Odoo

- name: "Copy current files at {{ odoo_filestore_src_path }} to new filestore at {{ odoo_filestore_dest_path }}"
  # Trailing slash in source is important to avoid a dir to be created inside
  # rsync -a --delete --partial --stats -e ssh -o StrictHostKeyChecking=no root@135.181.146.51:/var/filestore_archive/coo_production/ /odoo_ci/data_dir/filestore/odoo_demo
  command: "rsync -a --delete --exclude '.git' --partial --stats -e 'ssh -o StrictHostKeyChecking=no -i {{ rsync_user.ssh_key_file }}' root@{{odoo_filestore_src_host}}:{{ odoo_filestore_src_path }}/{{ odoo_filestore_src_db }}/ {{ odoo_filestore_dest_path }}/{{ odoo_db_name }}"
  async: 1800 # wait for completion 30min
  poll: 15 # poll for completion every 15s
  become: yes
  # become_user: rsync
  # become_user: filestore_backup
  register: filestore_rsync_output
  when:
    - odoo_filestore_restore is defined and odoo_filestore_restore | bool == True
    - not ansible_check_mode
  notify: Restart Odoo

- name: Log filestore rsync output
  copy:
    content: "{{ filestore_rsync_output.stdout }}"
    dest: "/var/log/filestore_rsync_{{ ansible_date_time.epoch }}"
  when:
    - filestore_rsync_output is defined and filestore_rsync_output.skipped is not defined
    - not ansible_check_mode

- name: Ensure Odoo filestore belongs to odoo user and group
  file:
    state: directory
    path: "{{ odoo_filestore_dest_path }}"
    recurse: yes
    owner: odoo
    group: odoo
  notify: Restart Odoo

- name: Ensure Odoo filestore is named according to db 1/2
  stat:
    path: "{{ odoo_filestore_dest_path }}/{{ odoo_db_name }}"
  register: odoo_filestore_check
  changed_when: false
  when:
    - odoo_filestore_check is defined
    - not ansible_check_mode
  failed_when: not odoo_filestore_check.stat.exists or (odoo_filestore_check.stat.isdir is defined and not odoo_filestore_check.stat.isdir)
# TODO: Ensure filestore is OK
