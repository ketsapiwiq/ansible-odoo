- name: Create odoo_modules log folder
  file:
    path: "/var/log/odoo_modules/"
    state: directory
  tags:
    - odoo_modules

- name: Ensure Odoo container is started for modules updates/inits
  docker_compose:
    stopped: no
    restarted: no
    # Default, only if definition changed
    recreate: smart
    timeout: 600
    state: present
    remove_orphans: yes
    project_src: "{{ odoo_project_path }}"
  become: yes
  tags:
    - odoo_modules

- name: Set date for module logs
  set_fact:
    odoo_module_logs_date: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}"

- name: Init listed Odoo modules if set
  when: odoo_init_modules | length > 0
  with_items: odoo_init_modules
  become: yes
  async: 3600 # wait 1h then kill it
  poll: 5 # verifier si l'update des modules s'est terminée toutes les 5s 
  shell:
    cmd: "docker-compose exec -T odoo /opt/odoo/odoo-bin --stop-after-init --init {{ odoo_init_modules|join(',') }} --config=/etc/odoo/odoo.conf --log-level=debug --no-http --workers=0 --max-cron-threads=0 > /var/log/odoo_modules/init_{{ odoo_init_modules|join('-') }}_{{ odoo_module_logs_date }}.log 2>&1;"
    chdir: "{{ odoo_project_path }}"
  register: odoo_modules_init_list_result
  notify: Restart Odoo
  # Fail later
  ignore_errors: yes
  tags:
    - odoo_modules
    - odoo_init_modules

- name: Update listed Odoo modules if set
  async: 3600 # wait 1h then kill it
  poll: 5 # verifier si l'update des modules s'est terminée toutes les 5s
  shell:
    cmd: "docker-compose exec -T odoo /opt/odoo/odoo-bin --stop-after-init --update {{ odoo_update_modules|join(',') }} --config=/etc/odoo/odoo.conf --log-level=debug --no-http --workers=0 --max-cron-threads=0 > /var/log/odoo_modules/update_{{ odoo_update_modules|join('-') }}_{{ odoo_module_logs_date }}.log 2>&1;"
    chdir: "{{ odoo_project_path }}"
  when: odoo_update_modules | length > 0
  register: odoo_modules_update_list_result
  # Fail later
  ignore_errors: yes
  become: yes
  notify: Restart Odoo
  tags:
  - odoo_modules
  - odoo_update

- name: Update all Odoo modules if set
  async: 3600 # wait 1h then kill it
  poll: 5 # verifier si l'update des modules s'est terminée toutes les 5s 
  shell:
    cmd: "docker-compose exec -T odoo /opt/odoo/odoo-bin --stop-after-init --update all --config=/etc/odoo/odoo.conf --log-level=debug --no-http --workers=0 --max-cron-threads=0 > /var/log/odoo_modules/update_all_{{ odoo_module_logs_date }}.log 2>&1;"
    chdir: "{{ odoo_project_path }}"
  # Fail later
  ignore_errors: yes
  when: odoo_update_all_modules
  notify: Restart Odoo
  register: odoo_modules_update_all_result
  become: yes
  tags:
  - odoo_modules
  - odoo_update_all

- name: "Auto-update modified Odoo modules (requires OCA's module_auto_update: https://github.com/OCA/server-tools and a first `--update all`)"
  shell:
    cmd: docker-compose exec -T odoo bash -c "/opt/odoo/odoo-bin shell --stop-after-init --config=/etc/odoo/odoo.conf --log-level=debug --no-http --workers=0 --max-cron-threads=0 <<< \"env['ir.module.module'].upgrade_changed_checksum()\" " > /var/log/odoo_modules/update_auto_{{ odoo_module_logs_date }}.log 2>&1;
    chdir: "{{ odoo_project_path }}"
  async: 3600 # wait 1h then kill it
  poll: 5 # verifier si l'update des modules s'est terminée toutes les 5s 
  # Fail later
  ignore_errors: yes
  when: "odoo_update_auto_modules | bool"
  register: odoo_modules_auto_update_result
  become: yes
  notify: Restart Odoo
  tags:
  - odoo_modules
  - odoo_update
  - odoo_update_auto


- name: Fail if some init/update failed
  debug:
    msg: "Module operation '{{item.cmd }}' finished with error code {{ item.rc }}. Please check detailed logs in /var/log/odoo_modules/*_{{ odoo_module_logs_date }}.log"
  failed_when: "{{ item.rc }} != 0"
  with_items:
    - "{{ odoo_modules_init_list_result }}"
    - "{{ odoo_modules_update_all_result}}"
    - "{{ odoo_modules_update_list_result }}"
    - "{{ odoo_modules_auto_update_result }}"
